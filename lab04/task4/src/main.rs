fn main() {
    println!("Hello, world!");
}

fn my_first_interpreter(code: &str) -> String {
    let mut state: u8 = 0;
    let mut string = "".to_string();

    for ch in code.chars() {
        if ch == '+' {
            state = state.wrapping_add(1);
        } else if ch == '.' {
            string.push(state as char);
        }
    }
    string
}

#[cfg(test)]
mod tests {
    use super::*;
    #[test]
    fn example_test_case1() {
        // Outputs the uppercase English alphabet
        assert_eq!(my_first_interpreter("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+."), "ABCDEFGHIJKLMNOPQRSTUVWXYZ");
}

    #[test]
    fn example_test_case2() {
        // Hello World Program - outputs the string "Hello, World!"
        assert_eq!(my_first_interpreterello, World!");
    }

    #[test]
    fn example_test_case3() {
        assert_eq!(my_first_interpreter("+"), "");
    }

    #[test]
    fn example_test_case4() {
        assert_eq!(my_first_interpreter("++."), "\u{2}");
    }

    #[test]
    fn example_test_case5() {
        assert_eq!(my_first_interpreter("."), "\u{0}");
    }

    #[test]
    fn example_test_case6() {
        assert_eq!(my_first_interpreter(".+."), "\u{0}\u{1}");
    }

    #[test]
    fn example_test_case7() {
        assert_eq!(my_first_interpreter("..."), "\u{0}\u{0}\u{0}");
    }

    #[test]
    fn example_test_case8() {
        assert_eq!(my_first_interpreter(".+++."), "\u{0}\u{3}");
    }

    #[test]
    fn example_test_case9() {
        assert_eq!(my_first_interpreter("."), "\u{0}");
    }

    #[test]
    fn example_test_case10() {
        assert_eq!(my_first_interpreter("++++."), "\u{4}");
    }

}